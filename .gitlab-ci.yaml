stages:
  - prepare
  - execute
  - finalize

variables:
  DOTNET_VERSION: "8.x" # Specify your .NET version

before_script:
  - echo "ðŸŽ‰ The job was automatically triggered by a push event."
  - apt-get update && apt-get install -y wget # Install dependencies if necessary

checkout_code:
  stage: prepare
  script:
    - echo "Checking out code..."
    - git clone $CI_REPOSITORY_URL .

setup_dotnet:
  stage: prepare
  script:
    - echo "Setting up .NET..."
    - wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
    - chmod +x dotnet-install.sh
    - ./dotnet-install.sh -c $DOTNET_VERSION
    - export PATH="$HOME/.dotnet:$PATH"

prepare_tool:
  stage: initialize
  script:
    - echo "Running custom .NET tool (Initialize)..."
    - ~/.dotnet/dotnet ./tools/mybuildtool.dll initialize Arg1 Arg2

run_tool:
  stage: execute
  script:
    - echo "Running custom .NET tool (build pipeline)..."
    - ~/.dotnet/dotnet ./tools/mybuildtool.dll restore Arg1 Arg2
    - ~/.dotnet/dotnet ./tools/mybuildtool.dll build Arg1 Arg2
    - ~/.dotnet/dotnet ./tools/mybuildtool.dll analyze Arg1 Arg2
    - ~/.dotnet/dotnet ./tools/mybuildtool.dll test Arg1 Arg2
    - ~/.dotnet/dotnet ./tools/mybuildtool.dll deploy Arg1 Arg2
    - ~/.dotnet/dotnet ./tools/mybuildtool.dll custom Arg1 Arg2

finalize:
  stage: finalize
  script:
    - echo "Running custom .NET tool (Finalize)..."
    - ~/.dotnet/dotnet ./tools/mybuildtool.dll finalize Arg3 Arg4
